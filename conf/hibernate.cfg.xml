<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
		"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
		"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
        <!-- 数据库链接 -->
        
        <property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver </property>
		<!--数据库连接池的大小--> 
		<property name="hibernate.connection.pool.size">20 </property>       
	    <!--数据库的用户名-->
		<property name="connection.username">root</property>
		<!-- 密码-->
		<property name="connection.password">123456</property>
		<!--url-->
		<property name="connection.url">
			jdbc:mysql://localhost:3306/db_hackerspace?characterEncoding=UTF-8
		</property>
		<property name="jdbc.fetch_size">50 </property> 
        <!--jdbc.batch_size是指Hibernate批量插入,删除和更新时每次操作的记录数。Batch Size越大，批量操作的向数据库发送Sql的次数越少，速度就越快，同样耗用内存就越大--> 
        <property name="jdbc.batch_size">23 </property> 
        <!--jdbc.use_scrollable_resultset是否允许Hibernate用JDBC的可滚动的结果集。对分页的结果集。对分页时的设置非常有帮助--> 
        <property name="jdbc.use_scrollable_resultset">false </property> 
        <!--connection.useUnicode连接数据库时是否使用Unicode编码--> 
        <property name="Connection.useUnicode">true </property> 
		<!-- 
			作用：根据持久化类和映射文件动态生成表
			（当然也可以根据表来生成持久化）
			validate只验证不生成
			create-drop增删表
			create生成表
			update启动的时候先检查对应与否
		-->

		<property name="hbm2ddl.auto">validated</property>

		<!-- 
			显示hibernate内部生成的sql语句
			导入映射文件
		-->
		<property name="show_sql">true</property>
		<property name="dialect">org.hibernate.dialect.MySQL5Dialect</property>
		
		<!-- 请在下边加class类 -->
		<mapping class="com.hackerspace.model.ClassroomApply" />
		<mapping class="com.hackerspace.model.Classroom" />
		<mapping class="com.hackerspace.model.Company" />
		<mapping class="com.hackerspace.model.Cooperation" />
		<mapping class="com.hackerspace.model.Course" />
		<mapping class="com.hackerspace.model.Education" />
		<mapping class="com.hackerspace.model.Elective" />
		<mapping class="com.hackerspace.model.HaskerSystem" />
		<mapping class="com.hackerspace.model.Link" />
		<mapping class="com.hackerspace.model.Member" />
		<mapping class="com.hackerspace.model.Message" />
		<mapping class="com.hackerspace.model.News" />
		<mapping class="com.hackerspace.model.Picture" />
		<mapping class="com.hackerspace.model.Power" />
		<mapping class="com.hackerspace.model.Program" />
		<mapping class="com.hackerspace.model.Project" />
		<mapping class="com.hackerspace.model.ProjectShow" />
		<mapping class="com.hackerspace.model.Question" />
		<mapping class="com.hackerspace.model.Security" />
		<mapping class="com.hackerspace.model.Studio" />
		<mapping class="com.hackerspace.model.StudioApply" />
		<mapping class="com.hackerspace.model.Team" />
		<mapping class="com.hackerspace.model.TeamUser" />
		<mapping class="com.hackerspace.model.TeamNews" />
		<mapping class="com.hackerspace.model.User" />
		<mapping class="com.hackerspace.model.ApplyFile" />
    </session-factory>
</hibernate-configuration>
